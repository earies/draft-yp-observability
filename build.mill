//| mill-version: 1.0.4
//| mill-jvm-version: temurin:21
//| mvnDeps:
//| - uk.org.wilton::ietf-yang-mill-plugin::0.0.6

package build

import mill._
import uk.org.wilton.ietf.yang.mill.plugin._

object `package` extends IETF {
  def draft = Task.Source { "draft-wilton-netconf-yang-push-lite.md" }

  // All RFCs that we need to extract YANG from.
  def rfcDeps = List(
    8525, // Replaces 7895
    8072, 8341, 8342, 8343, 8344, 8529, 8639, 8641, 9196, 9640, 9641, 9642, 9643, 9645,
  )

  // All drafts that we need to extract YANG from.
  def draftDeps = Seq(
    "draft-ietf-netmod-rfc6991-bis-18",
    "draft-ietf-netconf-https-notif-15",
    "draft-ietf-netconf-udp-notif-22",
    "draft-ietf-netconf-udp-client-server-08",
    "draft-ietf-netconf-distributed-notif-15",
    "draft-ietf-netconf-http-client-server-29",
    "draft-ietf-netconf-yang-notifications-versioning-09",
    "draft-ietf-netconf-yang-library-augmentedby-12",
    "draft-ietf-netmod-yang-module-versioning-14",
    "draft-ietf-netmod-yang-semver-24",
    "draft-netana-netconf-yp-transport-capabilities-01",
    "draft-netana-netconf-notif-envelope-02"
  )

  // IANA YANG dependencies.
  def ianaDeps = Seq(
    "iana-tls-cipher-suite-algs@2024-10-16.yang"
  )

  def extractedFileRenames = Map(
      "ietf-distributed-notif@2024-04-14.yang" -> "ietf-distributed-notif@2024-04-21.yang",
      "ietf-yang-push-revision@2024-05-28.yang" -> "ietf-yang-push-revision@2024-06-16.yang"
    )

  def excludedModules = Set(
    "ietf-https-notif-transport@2024-02-01.yang",
    "ietf-yang-library-rfc7895-augmentedby.yang"
  )

  def yangCompiles = Seq(
    Seq("ietf-yp-lite.yang", "ietf-yp-lite-config.yang"),
    Seq("ietf-yp-lite-capabilities.yang", "ietf-yp-lite.yang")
  )

  def yangTrees = Seq(
    (Seq("ietf-yp-lite.yang"), "ietf-yp-lite-tree.txt", None),
    (Seq("ietf-yp-lite-config.yang"), "filters.txt", Some("datastore-telemetry/filters")),
    (Seq("ietf-yp-lite-config.yang"), "subscriptions.txt", Some("datastore-telemetry/subscriptions")),
    (Seq("ietf-yp-lite-config.yang"), "update-trigger.txt", Some("datastore-telemetry/subscriptions/subscription/update-trigger")),
    (Seq("ietf-yp-lite-config.yang"), "receivers.txt", Some("datastore-telemetry/receivers")),
    (Seq("ietf-yp-lite-config.yang"), "ietf-yp-lite-config-tree.txt", None),
    (Seq("ietf-yp-lite-capabilities.yang"), "ietf-yp-lite-capabilities-tree.txt", None),
    (Seq("ietf-yp-lite-capabilities.yang", "ietf-system-capabilities@2022-02-17.yang"), "ietf-system-capabilities-tree.txt", None)
  )

  def yangTreeSnippets = Seq(
    ("ietf-yp-lite-tree.txt", "-x establish-subscription", "-x delete-subscription", "establish-subscription.txt"),
    ("ietf-yp-lite-tree.txt", "-x delete-subscription", "-x kill-subscription", "delete-subscription.txt"),
    ("ietf-yp-lite-tree.txt", "-x kill-subscription", "notifications", "kill-subscription.txt"),
    ("ietf-yp-lite-tree.txt", "-n subscription-started", "subscription-terminated", "subscription-started.txt"),
    ("ietf-yp-lite-tree.txt", "-n subscription-terminated", "receiver-disconnected", "subscription-terminated.txt"),
    ("ietf-yp-lite-tree.txt", "-n receiver-disconnected", "-n update", "receiver-disconnected.txt"),
    ("ietf-yp-lite-tree.txt", "-n update$", "-n update-complete", "update-notification.txt"),
    ("ietf-yp-lite-tree.txt", "-n update-complete", "<end>", "update-complete.txt"),
  )

  def all = Task {
    checkDraftLatest()
    make()
  }
}
