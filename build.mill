package build

import mill._
import $file.util_ietf._

object `package` extends RootModule with IETF {
  def draft = Task.Source { "draft-wilton-netconf-yang-push-lite.md" }

  val rfcDeps = List(
    8525, // Replaces 7895
    8072, 8341, 8342, 8343, 8344, 8529, 8525, 8639, 8641, 9196, 9640, 9641, 9642, 9643, 9645
  )

  def draftDeps = Agg(
    "draft-ietf-netmod-rfc6991-bis-17",
    "draft-ietf-netconf-https-notif-15",
    "draft-ietf-netconf-udp-notif-18", // was -16
    "draft-ietf-netconf-udp-client-server-05",
    "draft-ietf-netconf-distributed-notif-10",
    "draft-ietf-netconf-http-client-server-24", // was -23
    "draft-ietf-netconf-yang-notifications-versioning-07", // was -05
    "draft-ietf-netconf-yang-library-augmentedby-01",
    "draft-ietf-netmod-yang-module-versioning-12",
    "draft-ietf-netmod-yang-semver-19", // was -17
    //"draft-tgraf-netconf-yang-push-observation-time-03", // now part of envelope.
    "draft-netana-netconf-yp-transport-capabilities-01", // was -00
    "draft-netana-netconf-notif-envelope-02" // was -01
  )

  def ianaDeps = Agg(
    "iana-tls-cipher-suite-algs@2024-10-16.yang"
  )

  def extractedFileRenames = Map(
      "ietf-udp-client@2024-10-15" -> "ietf-udp-client@2024-10-15.yang",
      "ietf-distributed-notif@2024-04-14.yang" -> "ietf-distributed-notif@2024-04-21.yang",
      "ietf-yang-push-revision@2024-05-28.yang" -> "ietf-yang-push-revision@2024-06-16.yang"
    )

  def excludedModules = Set(
    "ietf-https-notif-transport@2024-02-01.yang",
    "ietf-yang-library-rfc7895-augmentedby.yang"
  )

  def yangCompiles = Seq(
    (Seq("ietf-yp-lite.yang"))
  )

  def yangTrees = Seq(
    (Seq("ietf-yp-lite.yang"), "ietf-yp-lite-tree.txt", None),
    (Seq("ietf-yp-lite.yang"), "filters.txt", Some("datastore-telemetry/filters")),
    (Seq("ietf-yp-lite.yang"), "subscriptions.txt", Some("datastore-telemetry/subscriptions")),
    (Seq("ietf-yp-lite.yang"), "update-trigger.txt", Some("datastore-telemetry/subscriptions/subscription/update-trigger")),
    (Seq("ietf-yp-lite.yang"), "receivers.txt", Some("datastore-telemetry/receivers"))
  )

  def yangTreeSnippets = Seq(
    ("ietf-yp-lite-tree.txt", "-x establish-subscription", "-x delete-subscription", "establish-subscription.txt"),
    ("ietf-yp-lite-tree.txt", "-x delete-subscription", "-x kill-subscription", "delete-subscription.txt"),
    ("ietf-yp-lite-tree.txt", "-x kill-subscription", "notifications", "kill-subscription.txt"),
    ("ietf-yp-lite-tree.txt", "-n subscription-started", "subscription-terminated", "subscription-started.txt"),
    ("ietf-yp-lite-tree.txt", "-n subscription-terminated", "update", "subscription-terminated.txt"),
    ("ietf-yp-lite-tree.txt", "-n replay-completed", "-n update-complete", "replay-completed.txt"),
    ("ietf-yp-lite-tree.txt", "-n update$", "<end>", "update-notification.txt"),
  )

  def all = Task {
    checkDraftLatest()
    make()
  }
}
